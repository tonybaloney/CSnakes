using CSnakes.Runtime.Python;

namespace CSnakes.Runtime;

internal class DynamicCodeMessages
{
    private const string Type = nameof(Type);
    private const string MakeGenericType = $"{nameof(System)}.{Type}.{nameof(System.Type.MakeGenericType)}(params {Type}[])";
    // TODO Use open generic type names when available in C# 14+
    private const string IGeneratorIterator = nameof(IGeneratorIterator<object,object,object>);
    private const string IReadOnlyList = nameof(IReadOnlyList<object>);
    private const string IReadOnlyDictionary = nameof(IReadOnlyDictionary<object, object>);
    private const string ICoroutine = nameof(ICoroutine<object, object, object>);

    private const string Instead = "Use methods generated by the source generator instead. See also <https://tonybaloney.github.io/CSnakes/main/advanced/native-aot/>";

    public const string CallsMakeGenericType = $"Calls '{MakeGenericType}'. {Instead}";

    public const string MayCallMakeGenericType =
        $"Calls '{MakeGenericType}' when converting to generic " +
        $"'{IGeneratorIterator}', " +
        $"'{IReadOnlyList}', " +
        $"'{IReadOnlyDictionary} 'or " +
        $"'{ICoroutine}', or a tuple containing any of the aforementioned as one or more elements. {Instead}";
}
