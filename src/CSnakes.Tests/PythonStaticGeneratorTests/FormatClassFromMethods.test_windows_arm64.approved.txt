// <auto-generated/>
#nullable enable

#pragma warning disable PRTEXP001, PRTEXP002, CS0028

using CSnakes.Runtime;
using CSnakes.Runtime.Python;

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

using Microsoft.Extensions.Logging;

[assembly: MetadataUpdateHandler(typeof(Python.Generated.Tests.TestClassExtensions))]

namespace Python.Generated.Tests;

partial static class TestClassExtensions
{
    private static ITestClass? instance;

    private static ReadOnlySpan<byte> HotReloadHash => "9bf111d88c2a5c3a1a4009b1b6beb99e"u8;

    public static ITestClass TestClass(this IPythonEnvironment env)
    {
        if (instance is null)
        {
            instance = new TestClassInternal(env.Logger);
        }
        System.Diagnostics.Debug.Assert(!env.IsDisposed());
        return instance;
    }

    public static void UpdateApplication(Type[]? updatedTypes)
    {
        instance?.ReloadModule();
    }

    private class TestClassInternal : ITestClass
    {
        private PyObject module;
        private readonly ILogger<IPythonEnvironment>? logger;

        private PyObject __func_get_machine_architecture;
        private PyObject __func_test_basic_computation;
        private PyObject __func_get_success_message;
        private PyObject __func_test_json_dumps;
        private PyObject __func_test_hashlib_import;
        private PyObject __func_get_datetime_now_iso;
        private PyObject __func_get_platform_info;
        private PyObject __func_get_executable_path;
        private PyObject __func_test_md5_hash;
        private PyObject __func_test_sha256_hash;
        private PyObject __func_get_openssl_version;
        private PyObject __func_test_ssl_context_creation;
        private PyObject __func_test_math_sqrt;
        private PyObject __func_test_decimal_addition;
        private PyObject __func_test_struct_pack;
        private PyObject __func_get_system_name;
        private PyObject __func_get_architecture_bits;
        private PyObject __func_get_byte_order;
        private PyObject __func_get_sys_maxsize;
        private PyObject __func_test_subprocess_echo;
        private PyObject __func_get_os_name;
        private PyObject __func_get_path_separator;
        private PyObject __func_get_pointer_size;
        private PyObject __func_get_int_array_itemsize;
        private PyObject __func_get_float_array_itemsize;
        private PyObject __func_test_unicode_length;
        private PyObject __func_test_regex_findall;
        private PyObject __func_test_big_integer;
        private PyObject __func_test_complex_magnitude;
        private PyObject __func_test_itertools_combinations;
        private PyObject __func_test_counter;
        private PyObject __func_test_string_io;
        private PyObject __func_test_bytes_io;
        private PyObject __func_count_available_modules;
        private PyObject __func_test_performance_computation;
        private PyObject __func_test_struct_alignment;
        private PyObject __func_test_floating_point_precision;
        private PyObject __func_test_platform_machine_detection;
        private PyObject __func_test_arm64_cpu_features;
        private PyObject __func_test_memory_alignment_arm64;
        private PyObject __func_test_arm64_simd_availability;
        private PyObject __func_test_arm64_process_information;
        private PyObject __func_test_arm64_threading_performance;
        private PyObject __func_test_arm64_multiprocessing_support;
        private PyObject __func_test_arm64_file_system_performance;
        private PyObject __func_test_arm64_network_stack;
        private PyObject __func_test_arm64_garbage_collection;
        private PyObject __func_test_arm64_uuid_generation;
        private PyObject __func_test_arm64_exception_handling;
        private PyObject __func_test_arm64_warning_system;
        private PyObject __func_test_arm64_memory_usage_patterns;

        internal TestClassInternal(ILogger<IPythonEnvironment>? logger)
        {
            this.logger = logger;
            using (GIL.Acquire())
            {
                logger?.LogDebug("Importing module {ModuleName}", "test");
                this.module = ThisModule.Import();
                this.__func_get_machine_architecture = module.GetAttr("get_machine_architecture");
                this.__func_test_basic_computation = module.GetAttr("test_basic_computation");
                this.__func_get_success_message = module.GetAttr("get_success_message");
                this.__func_test_json_dumps = module.GetAttr("test_json_dumps");
                this.__func_test_hashlib_import = module.GetAttr("test_hashlib_import");
                this.__func_get_datetime_now_iso = module.GetAttr("get_datetime_now_iso");
                this.__func_get_platform_info = module.GetAttr("get_platform_info");
                this.__func_get_executable_path = module.GetAttr("get_executable_path");
                this.__func_test_md5_hash = module.GetAttr("test_md5_hash");
                this.__func_test_sha256_hash = module.GetAttr("test_sha256_hash");
                this.__func_get_openssl_version = module.GetAttr("get_openssl_version");
                this.__func_test_ssl_context_creation = module.GetAttr("test_ssl_context_creation");
                this.__func_test_math_sqrt = module.GetAttr("test_math_sqrt");
                this.__func_test_decimal_addition = module.GetAttr("test_decimal_addition");
                this.__func_test_struct_pack = module.GetAttr("test_struct_pack");
                this.__func_get_system_name = module.GetAttr("get_system_name");
                this.__func_get_architecture_bits = module.GetAttr("get_architecture_bits");
                this.__func_get_byte_order = module.GetAttr("get_byte_order");
                this.__func_get_sys_maxsize = module.GetAttr("get_sys_maxsize");
                this.__func_test_subprocess_echo = module.GetAttr("test_subprocess_echo");
                this.__func_get_os_name = module.GetAttr("get_os_name");
                this.__func_get_path_separator = module.GetAttr("get_path_separator");
                this.__func_get_pointer_size = module.GetAttr("get_pointer_size");
                this.__func_get_int_array_itemsize = module.GetAttr("get_int_array_itemsize");
                this.__func_get_float_array_itemsize = module.GetAttr("get_float_array_itemsize");
                this.__func_test_unicode_length = module.GetAttr("test_unicode_length");
                this.__func_test_regex_findall = module.GetAttr("test_regex_findall");
                this.__func_test_big_integer = module.GetAttr("test_big_integer");
                this.__func_test_complex_magnitude = module.GetAttr("test_complex_magnitude");
                this.__func_test_itertools_combinations = module.GetAttr("test_itertools_combinations");
                this.__func_test_counter = module.GetAttr("test_counter");
                this.__func_test_string_io = module.GetAttr("test_string_io");
                this.__func_test_bytes_io = module.GetAttr("test_bytes_io");
                this.__func_count_available_modules = module.GetAttr("count_available_modules");
                this.__func_test_performance_computation = module.GetAttr("test_performance_computation");
                this.__func_test_struct_alignment = module.GetAttr("test_struct_alignment");
                this.__func_test_floating_point_precision = module.GetAttr("test_floating_point_precision");
                this.__func_test_platform_machine_detection = module.GetAttr("test_platform_machine_detection");
                this.__func_test_arm64_cpu_features = module.GetAttr("test_arm64_cpu_features");
                this.__func_test_memory_alignment_arm64 = module.GetAttr("test_memory_alignment_arm64");
                this.__func_test_arm64_simd_availability = module.GetAttr("test_arm64_simd_availability");
                this.__func_test_arm64_process_information = module.GetAttr("test_arm64_process_information");
                this.__func_test_arm64_threading_performance = module.GetAttr("test_arm64_threading_performance");
                this.__func_test_arm64_multiprocessing_support = module.GetAttr("test_arm64_multiprocessing_support");
                this.__func_test_arm64_file_system_performance = module.GetAttr("test_arm64_file_system_performance");
                this.__func_test_arm64_network_stack = module.GetAttr("test_arm64_network_stack");
                this.__func_test_arm64_garbage_collection = module.GetAttr("test_arm64_garbage_collection");
                this.__func_test_arm64_uuid_generation = module.GetAttr("test_arm64_uuid_generation");
                this.__func_test_arm64_exception_handling = module.GetAttr("test_arm64_exception_handling");
                this.__func_test_arm64_warning_system = module.GetAttr("test_arm64_warning_system");
                this.__func_test_arm64_memory_usage_patterns = module.GetAttr("test_arm64_memory_usage_patterns");
            }
        }

        void IReloadableModuleImport.ReloadModule()
        {
            logger?.LogDebug("Reloading module {ModuleName}", "test");
            using (GIL.Acquire())
            {
                Import.ReloadModule(ref module);
                // Dispose old functions
                this.__func_get_machine_architecture.Dispose();
                this.__func_test_basic_computation.Dispose();
                this.__func_get_success_message.Dispose();
                this.__func_test_json_dumps.Dispose();
                this.__func_test_hashlib_import.Dispose();
                this.__func_get_datetime_now_iso.Dispose();
                this.__func_get_platform_info.Dispose();
                this.__func_get_executable_path.Dispose();
                this.__func_test_md5_hash.Dispose();
                this.__func_test_sha256_hash.Dispose();
                this.__func_get_openssl_version.Dispose();
                this.__func_test_ssl_context_creation.Dispose();
                this.__func_test_math_sqrt.Dispose();
                this.__func_test_decimal_addition.Dispose();
                this.__func_test_struct_pack.Dispose();
                this.__func_get_system_name.Dispose();
                this.__func_get_architecture_bits.Dispose();
                this.__func_get_byte_order.Dispose();
                this.__func_get_sys_maxsize.Dispose();
                this.__func_test_subprocess_echo.Dispose();
                this.__func_get_os_name.Dispose();
                this.__func_get_path_separator.Dispose();
                this.__func_get_pointer_size.Dispose();
                this.__func_get_int_array_itemsize.Dispose();
                this.__func_get_float_array_itemsize.Dispose();
                this.__func_test_unicode_length.Dispose();
                this.__func_test_regex_findall.Dispose();
                this.__func_test_big_integer.Dispose();
                this.__func_test_complex_magnitude.Dispose();
                this.__func_test_itertools_combinations.Dispose();
                this.__func_test_counter.Dispose();
                this.__func_test_string_io.Dispose();
                this.__func_test_bytes_io.Dispose();
                this.__func_count_available_modules.Dispose();
                this.__func_test_performance_computation.Dispose();
                this.__func_test_struct_alignment.Dispose();
                this.__func_test_floating_point_precision.Dispose();
                this.__func_test_platform_machine_detection.Dispose();
                this.__func_test_arm64_cpu_features.Dispose();
                this.__func_test_memory_alignment_arm64.Dispose();
                this.__func_test_arm64_simd_availability.Dispose();
                this.__func_test_arm64_process_information.Dispose();
                this.__func_test_arm64_threading_performance.Dispose();
                this.__func_test_arm64_multiprocessing_support.Dispose();
                this.__func_test_arm64_file_system_performance.Dispose();
                this.__func_test_arm64_network_stack.Dispose();
                this.__func_test_arm64_garbage_collection.Dispose();
                this.__func_test_arm64_uuid_generation.Dispose();
                this.__func_test_arm64_exception_handling.Dispose();
                this.__func_test_arm64_warning_system.Dispose();
                this.__func_test_arm64_memory_usage_patterns.Dispose();
                // Bind to new functions
                this.__func_get_machine_architecture = module.GetAttr("get_machine_architecture");
                this.__func_test_basic_computation = module.GetAttr("test_basic_computation");
                this.__func_get_success_message = module.GetAttr("get_success_message");
                this.__func_test_json_dumps = module.GetAttr("test_json_dumps");
                this.__func_test_hashlib_import = module.GetAttr("test_hashlib_import");
                this.__func_get_datetime_now_iso = module.GetAttr("get_datetime_now_iso");
                this.__func_get_platform_info = module.GetAttr("get_platform_info");
                this.__func_get_executable_path = module.GetAttr("get_executable_path");
                this.__func_test_md5_hash = module.GetAttr("test_md5_hash");
                this.__func_test_sha256_hash = module.GetAttr("test_sha256_hash");
                this.__func_get_openssl_version = module.GetAttr("get_openssl_version");
                this.__func_test_ssl_context_creation = module.GetAttr("test_ssl_context_creation");
                this.__func_test_math_sqrt = module.GetAttr("test_math_sqrt");
                this.__func_test_decimal_addition = module.GetAttr("test_decimal_addition");
                this.__func_test_struct_pack = module.GetAttr("test_struct_pack");
                this.__func_get_system_name = module.GetAttr("get_system_name");
                this.__func_get_architecture_bits = module.GetAttr("get_architecture_bits");
                this.__func_get_byte_order = module.GetAttr("get_byte_order");
                this.__func_get_sys_maxsize = module.GetAttr("get_sys_maxsize");
                this.__func_test_subprocess_echo = module.GetAttr("test_subprocess_echo");
                this.__func_get_os_name = module.GetAttr("get_os_name");
                this.__func_get_path_separator = module.GetAttr("get_path_separator");
                this.__func_get_pointer_size = module.GetAttr("get_pointer_size");
                this.__func_get_int_array_itemsize = module.GetAttr("get_int_array_itemsize");
                this.__func_get_float_array_itemsize = module.GetAttr("get_float_array_itemsize");
                this.__func_test_unicode_length = module.GetAttr("test_unicode_length");
                this.__func_test_regex_findall = module.GetAttr("test_regex_findall");
                this.__func_test_big_integer = module.GetAttr("test_big_integer");
                this.__func_test_complex_magnitude = module.GetAttr("test_complex_magnitude");
                this.__func_test_itertools_combinations = module.GetAttr("test_itertools_combinations");
                this.__func_test_counter = module.GetAttr("test_counter");
                this.__func_test_string_io = module.GetAttr("test_string_io");
                this.__func_test_bytes_io = module.GetAttr("test_bytes_io");
                this.__func_count_available_modules = module.GetAttr("count_available_modules");
                this.__func_test_performance_computation = module.GetAttr("test_performance_computation");
                this.__func_test_struct_alignment = module.GetAttr("test_struct_alignment");
                this.__func_test_floating_point_precision = module.GetAttr("test_floating_point_precision");
                this.__func_test_platform_machine_detection = module.GetAttr("test_platform_machine_detection");
                this.__func_test_arm64_cpu_features = module.GetAttr("test_arm64_cpu_features");
                this.__func_test_memory_alignment_arm64 = module.GetAttr("test_memory_alignment_arm64");
                this.__func_test_arm64_simd_availability = module.GetAttr("test_arm64_simd_availability");
                this.__func_test_arm64_process_information = module.GetAttr("test_arm64_process_information");
                this.__func_test_arm64_threading_performance = module.GetAttr("test_arm64_threading_performance");
                this.__func_test_arm64_multiprocessing_support = module.GetAttr("test_arm64_multiprocessing_support");
                this.__func_test_arm64_file_system_performance = module.GetAttr("test_arm64_file_system_performance");
                this.__func_test_arm64_network_stack = module.GetAttr("test_arm64_network_stack");
                this.__func_test_arm64_garbage_collection = module.GetAttr("test_arm64_garbage_collection");
                this.__func_test_arm64_uuid_generation = module.GetAttr("test_arm64_uuid_generation");
                this.__func_test_arm64_exception_handling = module.GetAttr("test_arm64_exception_handling");
                this.__func_test_arm64_warning_system = module.GetAttr("test_arm64_warning_system");
                this.__func_test_arm64_memory_usage_patterns = module.GetAttr("test_arm64_memory_usage_patterns");
            }
        }

        public void Dispose()
        {
            logger?.LogDebug("Disposing module {ModuleName}", "test");
            this.__func_get_machine_architecture.Dispose();
            this.__func_test_basic_computation.Dispose();
            this.__func_get_success_message.Dispose();
            this.__func_test_json_dumps.Dispose();
            this.__func_test_hashlib_import.Dispose();
            this.__func_get_datetime_now_iso.Dispose();
            this.__func_get_platform_info.Dispose();
            this.__func_get_executable_path.Dispose();
            this.__func_test_md5_hash.Dispose();
            this.__func_test_sha256_hash.Dispose();
            this.__func_get_openssl_version.Dispose();
            this.__func_test_ssl_context_creation.Dispose();
            this.__func_test_math_sqrt.Dispose();
            this.__func_test_decimal_addition.Dispose();
            this.__func_test_struct_pack.Dispose();
            this.__func_get_system_name.Dispose();
            this.__func_get_architecture_bits.Dispose();
            this.__func_get_byte_order.Dispose();
            this.__func_get_sys_maxsize.Dispose();
            this.__func_test_subprocess_echo.Dispose();
            this.__func_get_os_name.Dispose();
            this.__func_get_path_separator.Dispose();
            this.__func_get_pointer_size.Dispose();
            this.__func_get_int_array_itemsize.Dispose();
            this.__func_get_float_array_itemsize.Dispose();
            this.__func_test_unicode_length.Dispose();
            this.__func_test_regex_findall.Dispose();
            this.__func_test_big_integer.Dispose();
            this.__func_test_complex_magnitude.Dispose();
            this.__func_test_itertools_combinations.Dispose();
            this.__func_test_counter.Dispose();
            this.__func_test_string_io.Dispose();
            this.__func_test_bytes_io.Dispose();
            this.__func_count_available_modules.Dispose();
            this.__func_test_performance_computation.Dispose();
            this.__func_test_struct_alignment.Dispose();
            this.__func_test_floating_point_precision.Dispose();
            this.__func_test_platform_machine_detection.Dispose();
            this.__func_test_arm64_cpu_features.Dispose();
            this.__func_test_memory_alignment_arm64.Dispose();
            this.__func_test_arm64_simd_availability.Dispose();
            this.__func_test_arm64_process_information.Dispose();
            this.__func_test_arm64_threading_performance.Dispose();
            this.__func_test_arm64_multiprocessing_support.Dispose();
            this.__func_test_arm64_file_system_performance.Dispose();
            this.__func_test_arm64_network_stack.Dispose();
            this.__func_test_arm64_garbage_collection.Dispose();
            this.__func_test_arm64_uuid_generation.Dispose();
            this.__func_test_arm64_exception_handling.Dispose();
            this.__func_test_arm64_warning_system.Dispose();
            this.__func_test_arm64_memory_usage_patterns.Dispose();
            module.Dispose();
        }

        public string GetMachineArchitecture()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_machine_architecture");
                PyObject __underlyingPythonFunc = this.__func_get_machine_architecture;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public long TestBasicComputation()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_basic_computation");
                PyObject __underlyingPythonFunc = this.__func_test_basic_computation;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<long, global::CSnakes.Runtime.Python.PyObjectImporters.Int64>();
                return __return;
            }
        }

        public string GetSuccessMessage()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_success_message");
                PyObject __underlyingPythonFunc = this.__func_get_success_message;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public string TestJsonDumps()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_json_dumps");
                PyObject __underlyingPythonFunc = this.__func_test_json_dumps;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public bool TestHashlibImport()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_hashlib_import");
                PyObject __underlyingPythonFunc = this.__func_test_hashlib_import;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<bool, global::CSnakes.Runtime.Python.PyObjectImporters.Boolean>();
                return __return;
            }
        }

        public string GetDatetimeNowIso()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_datetime_now_iso");
                PyObject __underlyingPythonFunc = this.__func_get_datetime_now_iso;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public string GetPlatformInfo()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_platform_info");
                PyObject __underlyingPythonFunc = this.__func_get_platform_info;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public string GetExecutablePath()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_executable_path");
                PyObject __underlyingPythonFunc = this.__func_get_executable_path;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public string TestMd5Hash()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_md5_hash");
                PyObject __underlyingPythonFunc = this.__func_test_md5_hash;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public string TestSha256Hash()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_sha256_hash");
                PyObject __underlyingPythonFunc = this.__func_test_sha256_hash;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public string GetOpensslVersion()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_openssl_version");
                PyObject __underlyingPythonFunc = this.__func_get_openssl_version;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public bool TestSslContextCreation()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_ssl_context_creation");
                PyObject __underlyingPythonFunc = this.__func_test_ssl_context_creation;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<bool, global::CSnakes.Runtime.Python.PyObjectImporters.Boolean>();
                return __return;
            }
        }

        public double TestMathSqrt()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_math_sqrt");
                PyObject __underlyingPythonFunc = this.__func_test_math_sqrt;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<double, global::CSnakes.Runtime.Python.PyObjectImporters.Double>();
                return __return;
            }
        }

        public string TestDecimalAddition()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_decimal_addition");
                PyObject __underlyingPythonFunc = this.__func_test_decimal_addition;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public byte[] TestStructPack()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_struct_pack");
                PyObject __underlyingPythonFunc = this.__func_test_struct_pack;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<byte[], global::CSnakes.Runtime.Python.PyObjectImporters.ByteArray>();
                return __return;
            }
        }

        public string GetSystemName()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_system_name");
                PyObject __underlyingPythonFunc = this.__func_get_system_name;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public string GetArchitectureBits()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_architecture_bits");
                PyObject __underlyingPythonFunc = this.__func_get_architecture_bits;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public string GetByteOrder()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_byte_order");
                PyObject __underlyingPythonFunc = this.__func_get_byte_order;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public long GetSysMaxsize()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_sys_maxsize");
                PyObject __underlyingPythonFunc = this.__func_get_sys_maxsize;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<long, global::CSnakes.Runtime.Python.PyObjectImporters.Int64>();
                return __return;
            }
        }

        public string TestSubprocessEcho()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_subprocess_echo");
                PyObject __underlyingPythonFunc = this.__func_test_subprocess_echo;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public string GetOsName()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_os_name");
                PyObject __underlyingPythonFunc = this.__func_get_os_name;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public string GetPathSeparator()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_path_separator");
                PyObject __underlyingPythonFunc = this.__func_get_path_separator;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public long GetPointerSize()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_pointer_size");
                PyObject __underlyingPythonFunc = this.__func_get_pointer_size;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<long, global::CSnakes.Runtime.Python.PyObjectImporters.Int64>();
                return __return;
            }
        }

        public long GetIntArrayItemsize()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_int_array_itemsize");
                PyObject __underlyingPythonFunc = this.__func_get_int_array_itemsize;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<long, global::CSnakes.Runtime.Python.PyObjectImporters.Int64>();
                return __return;
            }
        }

        public long GetFloatArrayItemsize()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "get_float_array_itemsize");
                PyObject __underlyingPythonFunc = this.__func_get_float_array_itemsize;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<long, global::CSnakes.Runtime.Python.PyObjectImporters.Int64>();
                return __return;
            }
        }

        public long TestUnicodeLength(string text)
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_unicode_length");
                PyObject __underlyingPythonFunc = this.__func_test_unicode_length;
                using PyObject text_pyObject = PyObject.From(text)!;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call(text_pyObject);
                var __return = __result_pyObject.BareImportAs<long, global::CSnakes.Runtime.Python.PyObjectImporters.Int64>();
                return __return;
            }
        }

        public long TestRegexFindall()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_regex_findall");
                PyObject __underlyingPythonFunc = this.__func_test_regex_findall;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<long, global::CSnakes.Runtime.Python.PyObjectImporters.Int64>();
                return __return;
            }
        }

        public string TestBigInteger()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_big_integer");
                PyObject __underlyingPythonFunc = this.__func_test_big_integer;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public double TestComplexMagnitude()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_complex_magnitude");
                PyObject __underlyingPythonFunc = this.__func_test_complex_magnitude;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<double, global::CSnakes.Runtime.Python.PyObjectImporters.Double>();
                return __return;
            }
        }

        public long TestItertoolsCombinations()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_itertools_combinations");
                PyObject __underlyingPythonFunc = this.__func_test_itertools_combinations;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<long, global::CSnakes.Runtime.Python.PyObjectImporters.Int64>();
                return __return;
            }
        }

        public long TestCounter()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_counter");
                PyObject __underlyingPythonFunc = this.__func_test_counter;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<long, global::CSnakes.Runtime.Python.PyObjectImporters.Int64>();
                return __return;
            }
        }

        public string TestStringIo()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_string_io");
                PyObject __underlyingPythonFunc = this.__func_test_string_io;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public string TestBytesIo()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_bytes_io");
                PyObject __underlyingPythonFunc = this.__func_test_bytes_io;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<string, global::CSnakes.Runtime.Python.PyObjectImporters.String>();
                return __return;
            }
        }

        public long CountAvailableModules()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "count_available_modules");
                PyObject __underlyingPythonFunc = this.__func_count_available_modules;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<long, global::CSnakes.Runtime.Python.PyObjectImporters.Int64>();
                return __return;
            }
        }

        public bool TestPerformanceComputation()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_performance_computation");
                PyObject __underlyingPythonFunc = this.__func_test_performance_computation;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<bool, global::CSnakes.Runtime.Python.PyObjectImporters.Boolean>();
                return __return;
            }
        }

        public bool TestStructAlignment()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_struct_alignment");
                PyObject __underlyingPythonFunc = this.__func_test_struct_alignment;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<bool, global::CSnakes.Runtime.Python.PyObjectImporters.Boolean>();
                return __return;
            }
        }

        public bool TestFloatingPointPrecision()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_floating_point_precision");
                PyObject __underlyingPythonFunc = this.__func_test_floating_point_precision;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<bool, global::CSnakes.Runtime.Python.PyObjectImporters.Boolean>();
                return __return;
            }
        }

        public bool TestPlatformMachineDetection()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_platform_machine_detection");
                PyObject __underlyingPythonFunc = this.__func_test_platform_machine_detection;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<bool, global::CSnakes.Runtime.Python.PyObjectImporters.Boolean>();
                return __return;
            }
        }

        public IReadOnlyDictionary<string, PyObject> TestArm64CpuFeatures()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_arm64_cpu_features");
                PyObject __underlyingPythonFunc = this.__func_test_arm64_cpu_features;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<IReadOnlyDictionary<string, PyObject>, global::CSnakes.Runtime.Python.PyObjectImporters.Dictionary<string, PyObject, global::CSnakes.Runtime.Python.PyObjectImporters.String, global::CSnakes.Runtime.Python.PyObjectImporters.Clone>>();
                return __return;
            }
        }

        public IReadOnlyDictionary<string, long> TestMemoryAlignmentArm64()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_memory_alignment_arm64");
                PyObject __underlyingPythonFunc = this.__func_test_memory_alignment_arm64;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<IReadOnlyDictionary<string, long>, global::CSnakes.Runtime.Python.PyObjectImporters.Dictionary<string, long, global::CSnakes.Runtime.Python.PyObjectImporters.String, global::CSnakes.Runtime.Python.PyObjectImporters.Int64>>();
                return __return;
            }
        }

        public bool TestArm64SimdAvailability()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_arm64_simd_availability");
                PyObject __underlyingPythonFunc = this.__func_test_arm64_simd_availability;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<bool, global::CSnakes.Runtime.Python.PyObjectImporters.Boolean>();
                return __return;
            }
        }

        public IReadOnlyDictionary<string, PyObject> TestArm64ProcessInformation()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_arm64_process_information");
                PyObject __underlyingPythonFunc = this.__func_test_arm64_process_information;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<IReadOnlyDictionary<string, PyObject>, global::CSnakes.Runtime.Python.PyObjectImporters.Dictionary<string, PyObject, global::CSnakes.Runtime.Python.PyObjectImporters.String, global::CSnakes.Runtime.Python.PyObjectImporters.Clone>>();
                return __return;
            }
        }

        public IReadOnlyDictionary<string, double> TestArm64ThreadingPerformance()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_arm64_threading_performance");
                PyObject __underlyingPythonFunc = this.__func_test_arm64_threading_performance;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<IReadOnlyDictionary<string, double>, global::CSnakes.Runtime.Python.PyObjectImporters.Dictionary<string, double, global::CSnakes.Runtime.Python.PyObjectImporters.String, global::CSnakes.Runtime.Python.PyObjectImporters.Double>>();
                return __return;
            }
        }

        public bool TestArm64MultiprocessingSupport()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_arm64_multiprocessing_support");
                PyObject __underlyingPythonFunc = this.__func_test_arm64_multiprocessing_support;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<bool, global::CSnakes.Runtime.Python.PyObjectImporters.Boolean>();
                return __return;
            }
        }

        public IReadOnlyDictionary<string, double> TestArm64FileSystemPerformance()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_arm64_file_system_performance");
                PyObject __underlyingPythonFunc = this.__func_test_arm64_file_system_performance;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<IReadOnlyDictionary<string, double>, global::CSnakes.Runtime.Python.PyObjectImporters.Dictionary<string, double, global::CSnakes.Runtime.Python.PyObjectImporters.String, global::CSnakes.Runtime.Python.PyObjectImporters.Double>>();
                return __return;
            }
        }

        public IReadOnlyDictionary<string, PyObject> TestArm64NetworkStack()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_arm64_network_stack");
                PyObject __underlyingPythonFunc = this.__func_test_arm64_network_stack;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<IReadOnlyDictionary<string, PyObject>, global::CSnakes.Runtime.Python.PyObjectImporters.Dictionary<string, PyObject, global::CSnakes.Runtime.Python.PyObjectImporters.String, global::CSnakes.Runtime.Python.PyObjectImporters.Clone>>();
                return __return;
            }
        }

        public IReadOnlyDictionary<string, PyObject> TestArm64GarbageCollection()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_arm64_garbage_collection");
                PyObject __underlyingPythonFunc = this.__func_test_arm64_garbage_collection;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<IReadOnlyDictionary<string, PyObject>, global::CSnakes.Runtime.Python.PyObjectImporters.Dictionary<string, PyObject, global::CSnakes.Runtime.Python.PyObjectImporters.String, global::CSnakes.Runtime.Python.PyObjectImporters.Clone>>();
                return __return;
            }
        }

        public IReadOnlyDictionary<string, PyObject> TestArm64UuidGeneration()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_arm64_uuid_generation");
                PyObject __underlyingPythonFunc = this.__func_test_arm64_uuid_generation;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<IReadOnlyDictionary<string, PyObject>, global::CSnakes.Runtime.Python.PyObjectImporters.Dictionary<string, PyObject, global::CSnakes.Runtime.Python.PyObjectImporters.String, global::CSnakes.Runtime.Python.PyObjectImporters.Clone>>();
                return __return;
            }
        }

        public IReadOnlyDictionary<string, bool> TestArm64ExceptionHandling()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_arm64_exception_handling");
                PyObject __underlyingPythonFunc = this.__func_test_arm64_exception_handling;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<IReadOnlyDictionary<string, bool>, global::CSnakes.Runtime.Python.PyObjectImporters.Dictionary<string, bool, global::CSnakes.Runtime.Python.PyObjectImporters.String, global::CSnakes.Runtime.Python.PyObjectImporters.Boolean>>();
                return __return;
            }
        }

        public IReadOnlyDictionary<string, PyObject> TestArm64WarningSystem()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_arm64_warning_system");
                PyObject __underlyingPythonFunc = this.__func_test_arm64_warning_system;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<IReadOnlyDictionary<string, PyObject>, global::CSnakes.Runtime.Python.PyObjectImporters.Dictionary<string, PyObject, global::CSnakes.Runtime.Python.PyObjectImporters.String, global::CSnakes.Runtime.Python.PyObjectImporters.Clone>>();
                return __return;
            }
        }

        public IReadOnlyDictionary<string, long> TestArm64MemoryUsagePatterns()
        {
            using (GIL.Acquire())
            {
                this.logger?.LogDebug("Invoking Python function: {FunctionName}", "test_arm64_memory_usage_patterns");
                PyObject __underlyingPythonFunc = this.__func_test_arm64_memory_usage_patterns;
                using PyObject __result_pyObject = __underlyingPythonFunc.Call();
                var __return = __result_pyObject.BareImportAs<IReadOnlyDictionary<string, long>, global::CSnakes.Runtime.Python.PyObjectImporters.Dictionary<string, long, global::CSnakes.Runtime.Python.PyObjectImporters.String, global::CSnakes.Runtime.Python.PyObjectImporters.Int64>>();
                return __return;
            }
        }
    }
}

/// <summary>
/// Represents functions of the Python module <c>test</c>.
/// </summary>
public interface ITestClass : IReloadableModuleImport
{
    /// <summary>
    /// Invokes the Python function <c>get_machine_architecture</c>:
    /// <code><![CDATA[
    /// def get_machine_architecture() -> str: ...
    /// ]]></code>
    /// </summary>
    string GetMachineArchitecture();

    /// <summary>
    /// Invokes the Python function <c>test_basic_computation</c>:
    /// <code><![CDATA[
    /// def test_basic_computation() -> int: ...
    /// ]]></code>
    /// </summary>
    long TestBasicComputation();

    /// <summary>
    /// Invokes the Python function <c>get_success_message</c>:
    /// <code><![CDATA[
    /// def get_success_message() -> str: ...
    /// ]]></code>
    /// </summary>
    string GetSuccessMessage();

    /// <summary>
    /// Invokes the Python function <c>test_json_dumps</c>:
    /// <code><![CDATA[
    /// def test_json_dumps() -> str: ...
    /// ]]></code>
    /// </summary>
    string TestJsonDumps();

    /// <summary>
    /// Invokes the Python function <c>test_hashlib_import</c>:
    /// <code><![CDATA[
    /// def test_hashlib_import() -> bool: ...
    /// ]]></code>
    /// </summary>
    bool TestHashlibImport();

    /// <summary>
    /// Invokes the Python function <c>get_datetime_now_iso</c>:
    /// <code><![CDATA[
    /// def get_datetime_now_iso() -> str: ...
    /// ]]></code>
    /// </summary>
    string GetDatetimeNowIso();

    /// <summary>
    /// Invokes the Python function <c>get_platform_info</c>:
    /// <code><![CDATA[
    /// def get_platform_info() -> str: ...
    /// ]]></code>
    /// </summary>
    string GetPlatformInfo();

    /// <summary>
    /// Invokes the Python function <c>get_executable_path</c>:
    /// <code><![CDATA[
    /// def get_executable_path() -> str: ...
    /// ]]></code>
    /// </summary>
    string GetExecutablePath();

    /// <summary>
    /// Invokes the Python function <c>test_md5_hash</c>:
    /// <code><![CDATA[
    /// def test_md5_hash() -> str: ...
    /// ]]></code>
    /// </summary>
    string TestMd5Hash();

    /// <summary>
    /// Invokes the Python function <c>test_sha256_hash</c>:
    /// <code><![CDATA[
    /// def test_sha256_hash() -> str: ...
    /// ]]></code>
    /// </summary>
    string TestSha256Hash();

    /// <summary>
    /// Invokes the Python function <c>get_openssl_version</c>:
    /// <code><![CDATA[
    /// def get_openssl_version() -> str: ...
    /// ]]></code>
    /// </summary>
    string GetOpensslVersion();

    /// <summary>
    /// Invokes the Python function <c>test_ssl_context_creation</c>:
    /// <code><![CDATA[
    /// def test_ssl_context_creation() -> bool: ...
    /// ]]></code>
    /// </summary>
    bool TestSslContextCreation();

    /// <summary>
    /// Invokes the Python function <c>test_math_sqrt</c>:
    /// <code><![CDATA[
    /// def test_math_sqrt() -> float: ...
    /// ]]></code>
    /// </summary>
    double TestMathSqrt();

    /// <summary>
    /// Invokes the Python function <c>test_decimal_addition</c>:
    /// <code><![CDATA[
    /// def test_decimal_addition() -> str: ...
    /// ]]></code>
    /// </summary>
    string TestDecimalAddition();

    /// <summary>
    /// Invokes the Python function <c>test_struct_pack</c>:
    /// <code><![CDATA[
    /// def test_struct_pack() -> bytes: ...
    /// ]]></code>
    /// </summary>
    byte[] TestStructPack();

    /// <summary>
    /// Invokes the Python function <c>get_system_name</c>:
    /// <code><![CDATA[
    /// def get_system_name() -> str: ...
    /// ]]></code>
    /// </summary>
    string GetSystemName();

    /// <summary>
    /// Invokes the Python function <c>get_architecture_bits</c>:
    /// <code><![CDATA[
    /// def get_architecture_bits() -> str: ...
    /// ]]></code>
    /// </summary>
    string GetArchitectureBits();

    /// <summary>
    /// Invokes the Python function <c>get_byte_order</c>:
    /// <code><![CDATA[
    /// def get_byte_order() -> str: ...
    /// ]]></code>
    /// </summary>
    string GetByteOrder();

    /// <summary>
    /// Invokes the Python function <c>get_sys_maxsize</c>:
    /// <code><![CDATA[
    /// def get_sys_maxsize() -> int: ...
    /// ]]></code>
    /// </summary>
    long GetSysMaxsize();

    /// <summary>
    /// Invokes the Python function <c>test_subprocess_echo</c>:
    /// <code><![CDATA[
    /// def test_subprocess_echo() -> str: ...
    /// ]]></code>
    /// </summary>
    string TestSubprocessEcho();

    /// <summary>
    /// Invokes the Python function <c>get_os_name</c>:
    /// <code><![CDATA[
    /// def get_os_name() -> str: ...
    /// ]]></code>
    /// </summary>
    string GetOsName();

    /// <summary>
    /// Invokes the Python function <c>get_path_separator</c>:
    /// <code><![CDATA[
    /// def get_path_separator() -> str: ...
    /// ]]></code>
    /// </summary>
    string GetPathSeparator();

    /// <summary>
    /// Invokes the Python function <c>get_pointer_size</c>:
    /// <code><![CDATA[
    /// def get_pointer_size() -> int: ...
    /// ]]></code>
    /// </summary>
    long GetPointerSize();

    /// <summary>
    /// Invokes the Python function <c>get_int_array_itemsize</c>:
    /// <code><![CDATA[
    /// def get_int_array_itemsize() -> int: ...
    /// ]]></code>
    /// </summary>
    long GetIntArrayItemsize();

    /// <summary>
    /// Invokes the Python function <c>get_float_array_itemsize</c>:
    /// <code><![CDATA[
    /// def get_float_array_itemsize() -> int: ...
    /// ]]></code>
    /// </summary>
    long GetFloatArrayItemsize();

    /// <summary>
    /// Invokes the Python function <c>test_unicode_length</c>:
    /// <code><![CDATA[
    /// def test_unicode_length(text: str) -> int: ...
    /// ]]></code>
    /// </summary>
    long TestUnicodeLength(string text);

    /// <summary>
    /// Invokes the Python function <c>test_regex_findall</c>:
    /// <code><![CDATA[
    /// def test_regex_findall() -> int: ...
    /// ]]></code>
    /// </summary>
    long TestRegexFindall();

    /// <summary>
    /// Invokes the Python function <c>test_big_integer</c>:
    /// <code><![CDATA[
    /// def test_big_integer() -> str: ...
    /// ]]></code>
    /// </summary>
    string TestBigInteger();

    /// <summary>
    /// Invokes the Python function <c>test_complex_magnitude</c>:
    /// <code><![CDATA[
    /// def test_complex_magnitude() -> float: ...
    /// ]]></code>
    /// </summary>
    double TestComplexMagnitude();

    /// <summary>
    /// Invokes the Python function <c>test_itertools_combinations</c>:
    /// <code><![CDATA[
    /// def test_itertools_combinations() -> int: ...
    /// ]]></code>
    /// </summary>
    long TestItertoolsCombinations();

    /// <summary>
    /// Invokes the Python function <c>test_counter</c>:
    /// <code><![CDATA[
    /// def test_counter() -> int: ...
    /// ]]></code>
    /// </summary>
    long TestCounter();

    /// <summary>
    /// Invokes the Python function <c>test_string_io</c>:
    /// <code><![CDATA[
    /// def test_string_io() -> str: ...
    /// ]]></code>
    /// </summary>
    string TestStringIo();

    /// <summary>
    /// Invokes the Python function <c>test_bytes_io</c>:
    /// <code><![CDATA[
    /// def test_bytes_io() -> str: ...
    /// ]]></code>
    /// </summary>
    string TestBytesIo();

    /// <summary>
    /// Invokes the Python function <c>count_available_modules</c>:
    /// <code><![CDATA[
    /// def count_available_modules() -> int: ...
    /// ]]></code>
    /// </summary>
    long CountAvailableModules();

    /// <summary>
    /// Invokes the Python function <c>test_performance_computation</c>:
    /// <code><![CDATA[
    /// def test_performance_computation() -> bool: ...
    /// ]]></code>
    /// </summary>
    bool TestPerformanceComputation();

    /// <summary>
    /// Invokes the Python function <c>test_struct_alignment</c>:
    /// <code><![CDATA[
    /// def test_struct_alignment() -> bool: ...
    /// ]]></code>
    /// </summary>
    bool TestStructAlignment();

    /// <summary>
    /// Invokes the Python function <c>test_floating_point_precision</c>:
    /// <code><![CDATA[
    /// def test_floating_point_precision() -> bool: ...
    /// ]]></code>
    /// </summary>
    bool TestFloatingPointPrecision();

    /// <summary>
    /// Invokes the Python function <c>test_platform_machine_detection</c>:
    /// <code><![CDATA[
    /// def test_platform_machine_detection() -> bool: ...
    /// ]]></code>
    /// </summary>
    bool TestPlatformMachineDetection();

    /// <summary>
    /// Invokes the Python function <c>test_arm64_cpu_features</c>:
    /// <code><![CDATA[
    /// def test_arm64_cpu_features() -> Dict[str, Any]: ...
    /// ]]></code>
    /// </summary>
    IReadOnlyDictionary<string, PyObject> TestArm64CpuFeatures();

    /// <summary>
    /// Invokes the Python function <c>test_memory_alignment_arm64</c>:
    /// <code><![CDATA[
    /// def test_memory_alignment_arm64() -> Dict[str, int]: ...
    /// ]]></code>
    /// </summary>
    IReadOnlyDictionary<string, long> TestMemoryAlignmentArm64();

    /// <summary>
    /// Invokes the Python function <c>test_arm64_simd_availability</c>:
    /// <code><![CDATA[
    /// def test_arm64_simd_availability() -> bool: ...
    /// ]]></code>
    /// </summary>
    bool TestArm64SimdAvailability();

    /// <summary>
    /// Invokes the Python function <c>test_arm64_process_information</c>:
    /// <code><![CDATA[
    /// def test_arm64_process_information() -> Dict[str, Any]: ...
    /// ]]></code>
    /// </summary>
    IReadOnlyDictionary<string, PyObject> TestArm64ProcessInformation();

    /// <summary>
    /// Invokes the Python function <c>test_arm64_threading_performance</c>:
    /// <code><![CDATA[
    /// def test_arm64_threading_performance() -> Dict[str, float]: ...
    /// ]]></code>
    /// </summary>
    IReadOnlyDictionary<string, double> TestArm64ThreadingPerformance();

    /// <summary>
    /// Invokes the Python function <c>test_arm64_multiprocessing_support</c>:
    /// <code><![CDATA[
    /// def test_arm64_multiprocessing_support() -> bool: ...
    /// ]]></code>
    /// </summary>
    bool TestArm64MultiprocessingSupport();

    /// <summary>
    /// Invokes the Python function <c>test_arm64_file_system_performance</c>:
    /// <code><![CDATA[
    /// def test_arm64_file_system_performance() -> Dict[str, float]: ...
    /// ]]></code>
    /// </summary>
    IReadOnlyDictionary<string, double> TestArm64FileSystemPerformance();

    /// <summary>
    /// Invokes the Python function <c>test_arm64_network_stack</c>:
    /// <code><![CDATA[
    /// def test_arm64_network_stack() -> Dict[str, Any]: ...
    /// ]]></code>
    /// </summary>
    IReadOnlyDictionary<string, PyObject> TestArm64NetworkStack();

    /// <summary>
    /// Invokes the Python function <c>test_arm64_garbage_collection</c>:
    /// <code><![CDATA[
    /// def test_arm64_garbage_collection() -> Dict[str, Any]: ...
    /// ]]></code>
    /// </summary>
    IReadOnlyDictionary<string, PyObject> TestArm64GarbageCollection();

    /// <summary>
    /// Invokes the Python function <c>test_arm64_uuid_generation</c>:
    /// <code><![CDATA[
    /// def test_arm64_uuid_generation() -> Dict[str, Any]: ...
    /// ]]></code>
    /// </summary>
    IReadOnlyDictionary<string, PyObject> TestArm64UuidGeneration();

    /// <summary>
    /// Invokes the Python function <c>test_arm64_exception_handling</c>:
    /// <code><![CDATA[
    /// def test_arm64_exception_handling() -> Dict[str, bool]: ...
    /// ]]></code>
    /// </summary>
    IReadOnlyDictionary<string, bool> TestArm64ExceptionHandling();

    /// <summary>
    /// Invokes the Python function <c>test_arm64_warning_system</c>:
    /// <code><![CDATA[
    /// def test_arm64_warning_system() -> Dict[str, Any]: ...
    /// ]]></code>
    /// </summary>
    IReadOnlyDictionary<string, PyObject> TestArm64WarningSystem();

    /// <summary>
    /// Invokes the Python function <c>test_arm64_memory_usage_patterns</c>:
    /// <code><![CDATA[
    /// def test_arm64_memory_usage_patterns() -> Dict[str, int]: ...
    /// ]]></code>
    /// </summary>
    IReadOnlyDictionary<string, long> TestArm64MemoryUsagePatterns();
}

file static class ThisModule
{
    public static PyObject Import() =>
        CSnakes.Runtime.Python.Import.ImportModule("test");
}
